name: Deploy-IaC-TF
on:
  workflow_dispatch: # Run manually 
  push:
    branches:
    - master
    paths:
      - "deploy/terraform/**"
  pull_request:
    branches:
    - master
    - release/*

env:
  APP_NAME: IaC-TF
  ENV_NAME: "poc"
  AZURE_RG_LOCATION: centralus
  TF_STORAGE_RG: "poc-shared-tfstate"
  TF_STORAGE_ACCT: "poceusastfstate"
  PR_NUMBER: ${{ github.event.number }}
    
jobs:
  deploy-Terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./deploy/terraform
    steps:
    - uses: actions/checkout@v2


      # extract branch name from inputs
    - name: Extract branch name from inputs
      if: github.event_name == 'pull_request'
      shell: bash
      run: |
        echo "ENV_NAME=$(echo pr${{ env.PR_NUMBER }})" >> $GITHUB_ENV


    # Replace Tokens #{ENV_NAME}#: Set TF State Key = Branch name, #{SHORT_SHA}# for tags
    - name: Replace tokens
      uses: cschleiden/replace-tokens@v1.0
      with:
        files: '["**/*.tf", "**/*.tfvars"]' 

    # print Environment
    - name: Print Environment
      run: |
        pwd
        ls -la
        echo '*** Workflow ENV ***'
        echo 'APP_NAME:' $APP_NAME
        echo 'ENV_NAME:' $ENV_NAME
        cat backend.tf
        cat actions.backend.tfvars
        cat params.bnk.tfvars

      # Deploy Infrastructure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Authentication for TF
      uses: Azure/cli@v1
      with:
        inlineScript: | 
          echo "ARM_SUBSCRIPTION_ID=$(az account show --query="id" -o tsv)" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=$(az account show --query="user.name" -o tsv)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq '.clientSecret' -r <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(az account show --query="tenantId" -o tsv)" >> $GITHUB_ENV

    - name: Install TF
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.tf_version }}

    - name: Init TF
      run: terraform init -var-file ./params.actions.tfvars -backend-config="backend.actions.tfvars"

    - name: TF Apply
      run: terraform apply -auto-approve -var-file ./params.actions.tfvars

